#!/bin/sh

set -eu

setOption() {
	file=$1; key=$2; value=$3; shift 3
	[ ! -f "${file}" ] && printf '{}' > "${file}"
	content=$(jq --arg k "${key}" --arg v "${value}" '.+{($k): $v}' "${file}")
	printf -- '%s\n' "${content}" > "${file}"
}

# Set playback options
PLAYBACK_FILE="${HOME}/.musikcube/playback.json"
setOption "${PLAYBACK_FILE}" 'OutputPlugin' "${MUSIKCUBE_OUTPUT_DRIVER}"

# Set musikcubeserver options
PLUGIN_MUSIKCUBESERVER_FILE="${HOME}/.musikcube/plugin_musikcubeserver(wss,http).json"
setOption "${PLUGIN_MUSIKCUBESERVER_FILE}" 'password' "${MUSIKCUBE_SERVER_PASSWORD}"

# Initialize
if [ -t 1 ]; then
	export TERM=xterm-256color
	caddy --agree --conf "${HOME}/.caddy/Caddyfile" &
	exec musikcube
else
	CADDY_PIDFILE='/tmp/caddy.lock'
	MUSIKCUBED_PIDFILE='/tmp/musikcubed.lock'
	rm -f "${CADDY_PIDFILE}" "${MUSIKCUBED_PIDFILE}"

	caddy --agree --conf "${HOME}/.caddy/Caddyfile" --pidfile "${CADDY_PIDFILE}" &
	musikcubed --start

	while sleep 10; do
		if [ ! -e "${CADDY_PIDFILE}" ] || [ ! -e "/proc/$(cat "${CADDY_PIDFILE}")" ]; then
			printf -- '%s\n' 'Caddy is not running, exiting...'
			exit 1
		elif [ ! -e "${MUSIKCUBED_PIDFILE}" ] || [ ! -e "/proc/$(cat "${MUSIKCUBED_PIDFILE}")" ]; then
			printf -- '%s\n' 'musikcubed is not running, exiting...'
			exit 1
		fi
	done
fi
