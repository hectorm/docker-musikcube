#!/bin/sh

set -eu

# Set playback options
PLAYBACK_FILE="${HOME}/.musikcube/playback.json"
[ ! -f "${PLAYBACK_FILE}" ] && printf '{}' > "${PLAYBACK_FILE}"
PLAYBACK_FILE_JSON=$(jq \
	--arg OutputPlugin "${MUSIKCUBE_OUTPUT_DRIVER}" '.+{OutputPlugin: $OutputPlugin}' \
	"${PLAYBACK_FILE}"
)
printf -- '%s\n' "${PLAYBACK_FILE_JSON}" > "${PLAYBACK_FILE}"

# Set musikcubeserver options
PLUGIN_MUSIKCUBESERVER_FILE="${HOME}/.musikcube/plugin_musikcubeserver(wss,http).json"
[ ! -f "${PLUGIN_MUSIKCUBESERVER_FILE}" ] && printf '{}' > "${PLUGIN_MUSIKCUBESERVER_FILE}"
PLUGIN_MUSIKCUBESERVER_JSON=$(jq \
	--arg password "${MUSIKCUBE_SERVER_PASSWORD}" '.+{password: $password}' \
	"${PLUGIN_MUSIKCUBESERVER_FILE}"
)
printf -- '%s\n' "${PLUGIN_MUSIKCUBESERVER_JSON}" > "${PLUGIN_MUSIKCUBESERVER_FILE}"

# Initialize
MUSIKCUBE_CADDYFILE="${HOME}/.caddy/Caddyfile"
if [ "${USE_MUSIKCUBE_CLIENT}" -eq 1 ]; then
	caddy --agree --conf "${MUSIKCUBE_CADDYFILE}" &
	exec musikcube
else
	caddy --agree --conf "${MUSIKCUBE_CADDYFILE}" & CADDY_PID=$!

	rm -f -- '/tmp/musikcubed.lock'
	musikcubed --start && MUSIKCUBE_PID=$(cat '/tmp/musikcubed.lock')

	while sleep 30; do
		if [ ! -e "/proc/${CADDY_PID}" ]; then
			printf -- '%s\n' 'Caddy is not running, exiting...'
			exit 1
		elif [ ! -e "/proc/${MUSIKCUBE_PID}" ]; then
			printf -- '%s\n' 'Musikcube is not running, exiting...'
			exit 1
		fi
	done
fi
